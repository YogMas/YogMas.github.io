{
    "version": "https://jsonfeed.org/version/1",
    "title": "YogMas学习站 • All posts by \"icoding答案\" tag",
    "description": "",
    "home_page_url": "http://yogmas-wang.top",
    "items": [
        {
            "id": "http://yogmas-wang.top/2021/11/18/dian-ke-icoding/",
            "url": "http://yogmas-wang.top/2021/11/18/dian-ke-icoding/",
            "title": "电科icoding答案",
            "date_published": "2021-11-17T16:00:00.000Z",
            "content_html": "<h1 id=\"c语言-icoding答案\"><a class=\"markdownIt-Anchor\" href=\"#c语言-icoding答案\">#</a> C 语言 - icoding 答案</h1>\n<h2 id=\"the-article-made-by-yogmas\"><a class=\"markdownIt-Anchor\" href=\"#the-article-made-by-yogmas\">#</a> The article made by YogMas</h2>\n<h3 id=\"实验一\"><a class=\"markdownIt-Anchor\" href=\"#实验一\">#</a> 实验一</h3>\n<h4 id=\"2-4计算税金\"><a class=\"markdownIt-Anchor\" href=\"#2-4计算税金\">#</a> 2-4：计算税金</h4>\n<p>编写⼀个程序，要求⽤户输⼊⼀个美元数量，然后显示出增加 5% 税率后的相应⾦额。</p>\n<p>Enter an amount: 100.00<br>\nwith tax added: $105.00</p>\n<p>输⼊的⾦额为⼤于 0 的两位数浮点数</p>\n<blockquote>\n<pre><code>#include &lt;stdio.h&gt;\nint main(void)\n{\n    float amount,final;\n    printf(\"Enter an amount:\");\n    scanf(\"%f\",&amp;amount);\n    // 获取用户的输入的的输入输入输入\n    final = amount * 1.05;\n    printf(\"get the final money:$%.2f\",final);\n    return 0;\n    \n}\n</code></pre>\n</blockquote>\n<h4 id=\"2-7计算账单\"><a class=\"markdownIt-Anchor\" href=\"#2-7计算账单\">#</a> 2-7：计算账单</h4>\n<p>编写⼀个程序，要求⽤户输出⼀个美元数量，然后显示出如何⽤最少 20 美元、10 美元、5 美元和 1 美元来付款。</p>\n<p>Enter a dollar amount: 93<br>\n$20 bills: 4<br>\n$10 bills: 1<br>\n$5 bills: 0<br>\n$1 bills: 3</p>\n<blockquote>\n<pre><code>#include&lt;stdio.h&gt;\nint main(void)\n{\n    int one,two,three,four,five;\n    printf(\"enter an amount:  \\n\");\n    \n    scanf(\"%d\",&amp;one);\n    two = one / 20;\n    three = (one - two*20)/10;\n    four = (one-two*20-three*10)/5;\n    five = (one-two*20-three*10-four*5);\n    printf(\"this is $20 bills:%d,$10 bills:%d,$5bills %d,$1 bills %d\",two,three,four,five);\n    return 0;\n}\n</code></pre>\n</blockquote>\n<h4 id=\"2-8还贷计算\"><a class=\"markdownIt-Anchor\" href=\"#2-8还贷计算\">#</a> 2-8：还贷计算</h4>\n<p>编程计算第⼀、第⼆、第三个⽉还贷后剩余的贷款⾦额。</p>\n<p>Enter amout of loan: 20000.00<br>\nEnter interest rate: 6.0<br>\nEnter monthly payment: 386.66</p>\n<p>Balance remaining after first payment: $19713.34<br>\nBalance remaining after second payment: $19425.25<br>\nBalance remaining after third payment: $19135.71</p>\n<p>提示：每个月的贷款余额减去还款金额后，还需要加上贷款余额与月利率的乘积。月利率的计算方法是把用户输入的利率转换成百分数再除以 12。</p>\n<blockquote>\n<pre><code>#include &lt;stdio.h&gt;\nint main(void)\n{\n    float loan,rate1,rate2,payment,one,two,three;\n    printf(\"please enter ur loan: \\n\");\n    scanf(\"%f\",&amp;loan);\n    printf(\"please enter ur rate: \\n\");\n    scanf(\"%f\",&amp;rate1);\n    printf(\"please enter ur monthly payment: \\n\");\n    scanf(\"%f\",&amp;payment);\n    rate2=rate1*0.01/12;\n    one=(loan-payment)+loan*rate2;\n    two=(one-payment)+one*rate2;\n    three=(two-payment)+two*rate2;\n    printf(\"this is ur Balance remaining after first payment:%.2f,second:%.2f,third:%.2f\",one,two,three);\n    return 0;\n}\n</code></pre>\n</blockquote>\n<h4 id=\"3-1日期格式转化\"><a class=\"markdownIt-Anchor\" href=\"#3-1日期格式转化\">#</a> 3-1：⽇期格式转化</h4>\n<p>编写⼀个程序，以⽉ / ⽇ / 年（即 mm/dd/yy）的格式接受⽤户录⼊的⽇期信息，并以年⽉⽇（即 yyyymmdd）的格式将其显示出来。</p>\n<p>Enter a date (mm/dd/yyyy): 2/17/2011<br>\nYou entered the date 20110217</p>\n<blockquote>\n<pre><code>#include&lt;stdio.h&gt;\nint main(void)\n{\n    int year,month,day;    \n    printf(\"please enter the date: .\\n\");\n    scanf(\"%d/%d/%d\",&amp;month,&amp;day,&amp;year);\n    printf(\"this is the date:%04d%02d%02d\",year,month,day);\n    return 0;\n    \n}\n</code></pre>\n</blockquote>\n<h4 id=\"3-6分数加法\"><a class=\"markdownIt-Anchor\" href=\"#3-6分数加法\">#</a> 3-6：分数加法</h4>\n<p>修改如下程序（ 3.2 节的 addfrac.c ），使⽤户可以同时输⼊两个分数，中间⽤加号隔开：</p>\n<p>Enter two fractions separated by a plus sign: 5/6+3/4<br>\nThe sum is 38/24</p>\n<blockquote>\n<pre><code>#include &lt;stdio.h&gt;\nint main(void)\n{\n    int fenzi1,fenzi2,fenmu1,fenmu2,sum1,sum2;\n    printf(\"please enter the  fractions: \\n\");\n    scanf(\"%d/%d+%d/%d\",&amp;fenzi1,&amp;fenmu1,&amp;fenzi2,&amp;fenmu2);\n    sum1=fenzi1*fenmu2+fenzi2*fenmu1;\n    sum2=fenmu1*fenmu2;\n    printf(\"this is the sum:%d/%d\",sum1,sum2);\n    return 0;\n    \n}\n</code></pre>\n</blockquote>\n<h3 id=\"实验二\"><a class=\"markdownIt-Anchor\" href=\"#实验二\">#</a> 实验二</h3>\n<h4 id=\"5-2-24小时制-12小时制转换\"><a class=\"markdownIt-Anchor\" href=\"#5-2-24小时制-12小时制转换\">#</a> 5-2： 24 ⼩时制 - 12 ⼩时制转换</h4>\n<p>编写⼀个程序，要求⽤户输⼊ 24 ⼩时制的时间，将其转换为 12 ⼩时制的格式。</p>\n<p>Enter a 24-hour time: 21:11<br>\nEquivalent 12-hour time: 9:11 PM</p>\n<p>Enter a 24-hour time: 0:01<br>\nEquivalent 12-hour time: 12:01 AM</p>\n<p>注意，不要把 12:00 显示为 0:00。</p>\n<blockquote>\n<pre><code>#include &lt;stdio.h&gt;\nint main(void)\n{\n    int enter1,enter2,b,c;\n    printf(\"please enter the time  \\n\");\n    scanf(\"%d:%d\",&amp;enter1,&amp;enter2);\n    b=enter1-12;\n    c=enter1+12;\n    if(12&lt;enter1&amp;&amp;enter1&lt;24) printf(\"this is ur time:%d:%d PM\\n\",b,enter2);\n    if(0&lt;enter1&amp;&amp;enter1&lt;12) printf(\"this is ur time: %d:%d AM\\n\",enter1,enter2);\n    if(enter1==0) printf (\"this is ur time: %d:%d AM\\n\",c,enter2);\n    if(enter1==12) printf (\"this is ur timer :  %d:%d PM\\n\",enter1,enter2);\n    return 0 ;\n        \n    \n}\n</code></pre>\n</blockquote>\n<h4 id=\"5-4-速等级与描述\"><a class=\"markdownIt-Anchor\" href=\"#5-4-速等级与描述\">#</a> 5-4： ⻛速等级与描述</h4>\n<p>下⾯是⽤于测量⻛⼒的蒲福⻛⼒等级的简化版，编写⼀个程序，要求⽤户输⼊⻛速（海⾥ / ⼩时），然后显示相应的描述。</p>\n<p>速率（海⾥ / ⼩时）\t描述<br>\n⼩于 1\tCalm（⽆⻛）<br>\n1~3\tLight air（轻⻛）<br>\n4~27\tBreeze（微⻛）<br>\n28~47\tGale（⼤⻛）<br>\n48~63\tStorm（暴⻛）<br>\n⼤于 63\tHurricane（飓⻛）<br>\n输出范例：Enter a wind speed: 1</p>\n<p>Light air</p>\n<p>Enter a wind speed: 27</p>\n<p>Breeze</p>\n<blockquote>\n<pre><code>#include &lt;stdio.h&gt;\nint main(void)\n{\n    int speed;\n    printf(\"please enter ur wind speed \\n\");\n    scanf(\"%d\",&amp;speed);\n    if(speed&lt;1) printf(\"Calm\");\n    if(speed&gt;=1&amp;&amp;speed&lt;=3) printf(\"Light air\");\n    if(speed&gt;=4&amp;&amp;speed&lt;=27) printf(\"Breeze\");\n    if(speed&gt;=28&amp;&amp;speed&lt;=47) printf(\"Gale\");\n    if(speed&gt;=48&amp;&amp;speed&lt;=63) printf(\"Storm\");\n    if(speed&gt;63) printf(\"Hurricane\");\n    return 0;\n}\n</code></pre>\n</blockquote>\n<h4 id=\"5-6通用产品代码\"><a class=\"markdownIt-Anchor\" href=\"#5-6通用产品代码\">#</a> 5-6：通⽤产品代码</h4>\n<p>修改如下（4.1 节的 upc.c）程序，使其可以检测 UPC 的有效性。在⽤户输⼊ UPC 后，程序将输出 VALID 或 NOT VALID 。</p>\n<p>输出范例：</p>\n<p>Enter the first (single) digit: 0<br>\nEnter first group of five digits: 13800<br>\nEnter second group of five digits: 15173<br>\nEnter the last (single) digit: 5<br>\nVALID</p>\n<p>Enter the first (single) digit: 0<br>\nEnter first group of five digits: 51500<br>\nEnter second group of five digits: 24128<br>\nEnter the last (single) digit: 7<br>\nNOT VALID</p>\n<blockquote>\n<pre><code>#include &lt;stdio.h&gt;\nint main(void)\n{\n    int d, i1, i2, i3, i4, i5, j1, j2, j3, j4, j5, first_sum, second_sum, total, total2, g;\n\n    printf(\"Enter the first (single) digit: \\n\");\n    scanf(\"%1d\", &amp;d);\n\n    printf(\"Enter the first group of five digits: \\n\");\n    scanf(\"%1d%1d%1d%1d%1d\", &amp;i1, &amp;i2, &amp;i3, &amp;i4, &amp;i5);\n\n    printf(\"Enter the second group of five digits: \\n\");\n    scanf(\"%1d%1d%1d%1d%1d\", &amp;j1, &amp;j2, &amp;j3, &amp;j4, &amp;j5);\n\n    printf(\"please Enter the last (single) digit:   \\n \");\n    scanf(\"%d\", &amp;g);\n\n    first_sum = d + i2 + i4 + j1 + j3 + j5;\n    second_sum = i1 + i3 + i5 + j2 + j4;\n    total = 3 * first_sum + second_sum;\n    total2 = 9 - ((total - 1) % 10);\n\n    if (g == total2)\n        printf(\"VALID \\n\");\n    else\n        printf(\"NOT VALID  \\n\");\n\n    return 0;\n}\n</code></pre>\n</blockquote>\n<h4 id=\"5-10将百分制转换为等级制\"><a class=\"markdownIt-Anchor\" href=\"#5-10将百分制转换为等级制\">#</a> 5-10：将百分制转换为等级制</h4>\n<p>利⽤ switch 语句编写⼀个程序，把⽤数字表示的成绩转化为字⺟表示的等级。</p>\n<p>使⽤下⾯的等级评定规则：A 为 90<sub>100，B 为 80</sub>89，C 为 70<sub>79，D 为 60</sub>69，F 为 0~59。如果成绩⾼于 100 或低于 0 显示出错信息。</p>\n<p>输出范例：<br>\nEnter numerical grade: 84<br>\nLetter grade: B</p>\n<p>Enter numerical grade: -1<br>\nError, grade must be between 0 and 100.</p>\n<p>提示：把成绩拆分成 2 个数字，然后使⽤ switch 语句判定⼗位上的数字。</p>\n<blockquote>\n<pre><code>#include &lt;stdio.h&gt;\nint main(void)\n{\n    int grade1, grade2;\n    printf(\"please enter ur numerical grade   \\n\");\n    scanf(\"%d\", &amp;grade1);\n    grade2 = grade1 / 10;\n    if (-10 &lt; grade1 &amp;&amp; grade1 &lt; 0)\n        printf(\"Error, grade must be between 0 and 100.\\n\");\n    else\n\n        if (100 &lt; grade1 &amp;&amp; grade1 &lt; 110)\n        printf(\"Error, grade must be between 0 and 100.\\n\");\n    else\n        switch (grade2)\n        {\n        case 10:\n        case 9:\n            printf(\"Letter grade: A \\n\");\n            break;\n        case 8:\n            printf(\"Letter grade: B \\n\");\n            break;\n        case 7:\n            printf(\"Letter grade: C \\n\");\n            break;\n        case 6:\n            printf(\"Letter grade: D \\n\");\n            break;\n        case 5:\n        case 4:\n        case 3:\n        case 2:\n        case 1:\n        case 0:\n            printf(\"Letter grade: F \\n\");\n            break;\n        default:\n            printf(\"Error, grade must be between 0 and 100.\\n\");\n        }\n\n    return 0;\n}\n</code></pre>\n</blockquote>\n<h4 id=\"6-2最大公约数\"><a class=\"markdownIt-Anchor\" href=\"#6-2最大公约数\">#</a> 6-2：最⼤公约数</h4>\n<p>编写程序，要求⽤户输⼊两个整数，然后计算这两个整数的最⼤公约数（GCD, Greatest Common Divisor）。</p>\n<p>输出范例：</p>\n<p>Enter two integers: 12 28<br>\nGreatest common divisor: 4</p>\n<p>Enter two integers：1 9<br>\nGreatest common divisor：1</p>\n<p>提示：求最⼤公约数的经典算法 Euclid 算法如下：<br>\n分别让变量 m 和 n 存储两个整数。如果 n 为 0，那么停⽌操作，m 中的值是 GCD ；否则计算 m 除以 n 的余数，把 n 保存到 m 中，并把余数保存到 n 中；重复上述操作，每次都先判断 n 是否为 0 。</p>\n<blockquote>\n<pre><code>#include &lt;stdio.h&gt;\nint main(void)\n{\n    int m, n, s, l;\n    printf(\"please Enter two integers:     \\n\");\n    scanf(\"%d %d\", &amp;m, &amp;n);\n    while (n != 0)\n    {\n        if (m &gt;= n)\n        {\n            s = m % n;\n            m = n;\n            n = s;\n        }\n        else\n        {\n            l = m;\n            m = n;\n            n = l;\n        }\n    }\n    printf(\"GCD=%d\", m);\n    return 0;\n}\n</code></pre>\n</blockquote>\n<h4 id=\"6-4股经纪人的佣金\"><a class=\"markdownIt-Anchor\" href=\"#6-4股经纪人的佣金\">#</a> 6-4：股经纪⼈的佣⾦</h4>\n<p>在下列程序（ 5.2 节的 broker.c ）中添加循环，以便⽤户可以输⼊多笔交易并且程序可以计算每次的佣⾦。程序在⽤户输⼊的交易额为 0 时终⽌。</p>\n<p>输出范例：</p>\n<p>Enter value of trade: 30000<br>\nCommission：$166.00</p>\n<p>Enter value of trade: 20000<br>\nCommission：$144.00<br>\nEnter value of trade: 0</p>\n<blockquote>\n<pre><code>#include &lt;stdio.h&gt;\n\nint main(void)\n{\n    float commission, value;\n\n    printf(\"Enter value of trade: \");\n    scanf(\"%f\", &amp;value);\n\n    while (value != 0)\n    {\n        if (value &lt; 2500.00f)\n            commission = 30.00f + .017f * value;\n        else if (value &lt; 6250.00f)\n            commission = 56.00f + .0066f * value;\n        else if (value &lt; 20000.00f)\n            commission = 76.00f + .0034f * value;\n        else if (value &lt; 50000.00f)\n            commission = 100.00f + .0022f * value;\n        else if (value &lt; 500000.00f)\n            commission = 155.00f + .0011f * value;\n        else\n            commission = 255.00f + .0009f * value;\n\n        if (commission &lt; 39.00f)\n            commission = 39.00f;\n\n        printf(\"Commission: $%.2f\\n\\n\", commission);\n        printf(\"Enter value of trade: \");\n        scanf(\"%f\", &amp;value);\n    }\n\n    return 0;\n}\n</code></pre>\n</blockquote>\n<h4 id=\"6-6偶数平方\"><a class=\"markdownIt-Anchor\" href=\"#6-6偶数平方\">#</a> 6-6：偶数平⽅</h4>\n<p>编写程序，提示⽤户输⼊⼀个数 n，然后显示出 1~n 的所有偶数的平⽅值。</p>\n<p>输出范例：<br>\nEnter a number: 100<br>\n4<br>\n16<br>\n36<br>\n64<br>\n100</p>\n<p>Enter a number: 50<br>\n4<br>\n16<br>\n36</p>\n<blockquote>\n<pre><code>#include &lt;stdio.h&gt;\nint main(void)\n{\n    int i, a, b;\n    printf(\"please enter a number:  \\n\");\n    scanf(\"%d\", &amp;i);\n    for (a = 2; a * a &lt;= i; a = a + 2)\n    {\n        b = a * a;\n        printf(\"%d \\n\", b);\n    }\n    return 0;\n}\n</code></pre>\n</blockquote>\n<h4 id=\"6-8日历\"><a class=\"markdownIt-Anchor\" href=\"#6-8日历\">#</a> 6-8：日历</h4>\n<p>编写程序显示单⽉的⽇历。⽤户指定这个⽉的天数和该⽉起始⽇是星期⼏。</p>\n<p>输出范例：</p>\n<p>Enter number of days in month: 31</p>\n<p>Enter starting day of the week(1=Sun, 7=Sat): 3</p>\n<p>日\t一\t二\t三\t四\t五\t六<br>\n 1\t2\t 3\t 4\t 5<br>\n6\t 7\t 8\t 9\t10\t11\t12<br>\n13\t14\t15\t16\t17\t18\t19<br>\n20\t21\t22\t23\t24\t25\t26<br>\n27\t28\t29\t30\t31</p>\n<blockquote>\n<pre><code>#include &lt;stdio.h&gt;\nint main(void)\n{\n    int a, b, c, i, d;\n    printf(\"Enter number of days in month: \\n\");\n    scanf(\"%d\", &amp;a);\n    printf(\"Enter starting day of the week(1=Sun, 7=Sat) \\n\");\n    scanf(\"%d\", &amp;b);\n    printf(\"Su Mo Tu We Th Fr Sa \\n\");\n    for (c = 1; c &lt; b; c++)\n    {\n        printf(\"   \");\n    }\n    for (i = 1; i &lt;= a; i++)\n    {\n        printf(\"%2d \", i);\n        d = (i + b - 1) % 7;\n        if (d == 0)\n        {\n            printf(\" \\n\");\n        }\n    }\n}\n</code></pre>\n</blockquote>\n<h3 id=\"实验三\"><a class=\"markdownIt-Anchor\" href=\"#实验三\">#</a> 实验三</h3>\n<h4 id=\"7-4翻译\"><a class=\"markdownIt-Anchor\" href=\"#7-4翻译\">#</a> 7-4：翻译</h4>\n<p>编写程序可以把字⺟格式的电话号码翻译成数值格式：</p>\n<p>Enter phone number: CALLATT</p>\n<p>2255288</p>\n<p>如果没有电话在身边，参考这⾥给出的字⺟在键盘上的对应关系：（2=ABC，3=DEF，4=GHI，5=JKL，6=MNO，7=PQRS，8=TUV，9=WXYZ）原始电话号码中的⾮字⺟字符（例如数字或标点符号）保持不变：</p>\n<p>Enter phone number: 1-800-COL-LECT1-800-265-5328</p>\n<p>可以假设任何⽤户输⼊的字⺟都是⼤写字⺟。</p>\n<p>输出范例：</p>\n<p>Enter phone number: 1-DCKS-A2D-OLED</p>\n<p>1-3257-223-6533</p>\n<blockquote>\n<pre><code>#include &lt;stdio.h&gt;\nint main(void)\n{\n    char ch;\n    printf(\"Enter phone number: \\n\");\n    while ((ch = getchar()) != '\\n')\n    {\n        if (ch == 'A' || ch == 'B' || ch == 'C')\n        {\n            printf(\"2\");\n        }\n        else if (ch == 'D' || ch == 'E' || ch == 'F')\n        {\n            printf(\"3\");\n        }\n        else if (ch == 'G' || ch == 'H' || ch == 'I')\n        {\n            printf(\"4\");\n        }\n        else if (ch == 'J' || ch == 'K' || ch == 'L')\n        {\n            printf(\"5\");\n        }\n        else if (ch == 'M' || ch == 'N' || ch == 'O')\n        {\n            printf(\"6\");\n        }\n        else if (ch == 'P' || ch == 'Q' || ch == 'R' || ch == 'S')\n        {\n            printf(\"7\");\n        }\n        else if (ch == 'T' || ch == 'U' || ch == 'V')\n        {\n            printf(\"8\");\n        }\n        else if (ch == 'W' || ch == 'X' || ch == 'Y' || ch == 'Z')\n        {\n            printf(\"9\");\n        }\n        else\n        {\n            printf(\"%c\", ch);\n        }\n    }\n    return 0;\n}\n</code></pre>\n</blockquote>\n<h4 id=\"7-12表达式求值\"><a class=\"markdownIt-Anchor\" href=\"#7-12表达式求值\">#</a> 7-12：表达式求值</h4>\n<p>编写程序对表达式求值。</p>\n<p>Enter an expression: 1+2.5*3<br>\nValue of expression: 10.5</p>\n<p>表达式中的操作数是浮点数，运算符是 +、-、* 和 /。表达式从左向右求值（所有运算符的优先级都⼀样）。</p>\n<p>输出范例：</p>\n<p>Enter an expression: 2+3*4-5/2<br>\nValue of expression: 7.5</p>\n<blockquote>\n<pre><code>#include &lt;stdio.h&gt;\nint main(void)\n{\n    float a, b;\n    char ch;\n    printf(\"Enter an expressio: \\n\");\n    scanf(\"%f\", &amp;a);\n    while ((ch = getchar()) != '\\n')\n    {\n        scanf(\"%f\", &amp;b);\n        switch (ch)\n        {\n        case '+':\n            a = a + b;\n            break;\n        case '-':\n            a = a - b;\n            break;\n        case '*':\n            a = a * b;\n            break;\n        case '/':\n            a = a / b;\n            break;\n        default:\n            break;\n        }\n    }\n    printf(\"Value of expression: %f\", a);\n    return 0;\n}\n</code></pre>\n</blockquote>\n<h4 id=\"8-2出现次数\"><a class=\"markdownIt-Anchor\" href=\"#8-2出现次数\">#</a> 8-2：出现次数</h4>\n<p>修改如下程序 (8.1 节的 repdigit.c)，使其打印⼀份列表，显示出每个数字在数中出现的次数。</p>\n<p>输出范例：</p>\n<p>Enter a number: 41271092</p>\n<p>Digit:\t0\t1\t2\t3\t4\t5\t6\t7\t8\t9<br>\nOccurrences:\t1\t2\t2\t0\t1\t0\t0\t1\t0\t1</p>\n<blockquote>\n<pre><code>#include &lt;stdio.h&gt;\nint main(void)\n{\n    char ch;\n    int appear[10] = {0};\n    int a ;\n    printf(\"Enter a number: \\n\");\n    while ((ch = getchar()) != '\\n')\n    {\n     a = ch - 48;\n        appear[a]++;\n    }\n    printf(\"Digit:\t    0 1 2 3 4 5 6 7 8 9 \\n\");\n    printf(\"Occurrences:%d %d %d %d %d %d %d %d %d %d\", appear[0], appear[1], appear[2], appear[3], appear[4], &gt;     appear[5], appear[6], appear[7], appear[8], appear[9]);\n    return 0;\n}\n</code></pre>\n</blockquote>\n<h4 id=\"8-9随机步法\"><a class=\"markdownIt-Anchor\" href=\"#8-9随机步法\">#</a> 8-9 随机步法</h4>\n<p>8-9：随机步法（Random Walk）</p>\n<p>编写程序，⽣成⼀种贯穿 10×10 字符数组（初始时全为字符’.’）的 “随机步法”。程序必须随机地从⼀个元素 “⾛到” 另⼀个元素，每次都向上、向下、向左或向右移动⼀个元素位置。已访问过的元素按访问顺序⽤字⺟ A 到 Z 进⾏标记。</p>\n<p>下⾯是⼀个输出示例：</p>\n<p>A\t.\t.\t.\t.\t.\t.\t.\t.\t.<br>\nB\tC\tD\t.\t.\t.\t.\t.\t.\t.<br>\n.\tF\tE\t.\t.\t.\t.\t.\t.\t.<br>\nH\tG\t.\t.\t.\t.\t.\t.\t.\t.<br>\nI\t.\t.\t.\t.\t.\t.\t.\t.\t.<br>\nJ\t.\t.\t.\t.\t.\t.\t.\tZ\t.<br>\nK\t.\t.\tR\tS\tT\tU\tV\tY\t.<br>\nL\tM\tP\tQ\t.\t.\t.\tW\tX\t.<br>\n.\tN\tO\t.\t.\t.\t.\t.\t.\t.<br>\n 利⽤ srand 函数和 rand 函数（⻅程序 deal.c）产⽣随机数，然后查看次数除以 4 的余数。余数⼀共有 4 种可能的值（0、1、2 和 3），指示下⼀次移动的 4 种可能⽅向。在执⾏移动之前，需要检查两项内容：⼀是不能⾛到数组外⾯，⼆是不能⾛到已有字⺟标记的位置。只要⼀个条件不满⾜，就得尝试换⼀个⽅向移动。如果 4 个⽅向都堵住了，程序就必须终⽌了。下⾯是提前结束的⼀个示例:</p>\n<p>A\tB\tG\tH\tI\t.\t.\t.\t.\t.<br>\n.\tC\tF\tO\tJ\tK\t.\t.\t.\t.<br>\n.\tD\tE\tN\tM\tL\t.\t.\t.\t.<br>\n.\t.\t.\t.\t.\t.\t.\t.\t.\t.<br>\n.\t.\t.\t.\t.\t.\t.\t.\t.\t.<br>\n.\t.\t.\t.\t.\t.\t.\t.\t.\t.<br>\n.\t.\t.\t.\t.\t.\t.\t.\t.\t.<br>\n.\t.\t.\t.\t.\t.\t.\t.\t.\t.<br>\n.\t.\t.\t.\t.\t.\t.\t.\t.\t.<br>\n 因为 Y 的 4 个⽅向都堵住了，所以没有地⽅可以放置下⼀步的 Z 了。</p>\n<blockquote>\n<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;time.h&gt;\nint main(void)\n{\n    char arr[10][10] = {\n        //声明数组\n        {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},\n        {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},\n        {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},\n        {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},\n        {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},\n        {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},\n        {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},\n        {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},\n        {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},\n        {'.', '.', '.', '.', '.', '.', '.', '.', '.', '.'},\n    };\n    int row = 0;\n    int line = 0;\n    int j = 0; //测试用防止死循环\n    char ch = 'A';\n    srand((unsigned)time(NULL));\n    arr[0][0] = ch;\n    do\n    {\n        j++; //测试用防止死循环 因为之前出现了死循环\n        int fate = rand() % 4; //获得0到4的随机数\n        ch++;                  //先增如果不符合后面再减\n        switch (fate)          //根据随机数的大小来确定往哪个方向走\n        {\n        case 1: //向右\n            row++;\n            if (0 &lt;= row &amp;&amp; row &lt;= 9 &amp;&amp; arr[row][line] == '.') //判别向右右边不是边界并且右边不是已经走过的地点了\n            {\n                arr[row][line] = ch; //判定成功 走向右边 终止switch循环\n                break;\n            }\n            else\n            {\n                row--; //判别失败 ch返回原值 row返回原值 退出swtich 等待进行下一次while循环\n                ch--;\n                break;\n            }\n        case 2: //向下\n            line++;\n            if (0 &lt;= line &amp;&amp; line &lt;= 9 &amp;&amp; arr[row][line] == '.') //判别向下不是边界并且下边不是已经走过的地方\n            {\n                arr[row][line] = ch; //判定成功 走向下边 终止switch循环\n                break;\n            }\n            else\n            {\n                line--; //判别失败 ch返回原值 line返回原值 退出swtich 等待进行下一次while循环\n                ch--;\n                break;\n            }\n        case 3: //向左\n            row--;\n            if (0 &lt;= row &amp;&amp; row &lt;= 9 &amp;&amp; arr[row][line] == '.') //判别向左不是边界并且下边不是已经走过的地方\n            {\n                arr[row][line] = ch; //判定成功 走向左边 终止switch循环\n                break;\n            }\n            else\n            {\n                row++; //判别失败 ch返回原值 row返回原值 退出swtich 等待进行下一次while循环\n                ch--;\n                break;\n            }\n        default:\n            line--;                                              //向上\n            if (0 &lt;= line &amp;&amp; line &lt;= 9 &amp;&amp; arr[row][line] == '.') //判别向上不是边界并且下边不是已经走过的地方\n            {\n                arr[row][line] = ch; //判定成功 走向上边 终止switch循环\n                break;\n            }\n            else\n            {\n                line++; //判别失败 ch返回原值 line返回原值 退出swtich 等待进行下一次while循环\n                ch--;\n                break;\n            }\n        }\n    } while (65 &lt;= ch &amp;&amp; ch &lt; 90 &amp;&amp; (arr[row + 1][line] == '.' || arr[row - 1][line] == '.' || arr[row][line + 1] &gt;     == '.' || arr[row][line - 1] == '.') &amp;&amp; j &lt; 100); //while循环判定 CH在A到Z之内 并且上下左右没有都被堵住\n    for (int k = 0; k &lt; 10; k+&gt;     +)                                                                                                              &gt;                           //嵌套for循环打印二维数组\n    {\n        printf(\"\\n\");\n        for (int i = 0; i &lt; 10; i++)\n        {\n            printf(\"%c\", arr[i][k]);\n        }\n    }\n\n    return 0;\n}\n</code></pre>\n</blockquote>\n<h4 id=\"8-15加密\"><a class=\"markdownIt-Anchor\" href=\"#8-15加密\">#</a> 8-15 加密</h4>\n<p>8-15：加密（Encryption）</p>\n<p>已知的最古⽼的⼀种加密技术是凯撒加密（得名于 Julius caesar）。该⽅法把⼀条消息中的每个字⺟⽤字⺟表中固定距离之后的那个字⺟来替代。（如果越过了字⺟ Z，会绕回到字⺟表的起始位置。例如，如果每个字⺟都⽤字⺟表中两个位置之后的字⺟代替，那么 Y 就被替换为 A，Z 就被替换为 B。）</p>\n<p>编写程序⽤凯撒加密⽅法对消息进⾏加密。⽤户输⼊待加密的消息和移位计数（字⺟移动的位置数⽬）：<br>\nEnter message to be encrypted: Go ahead, make my day.<br>\nEnter shift amount (1-25): 3<br>\nEncrypted message: Jr dkhdg, pdnh pb gdb.</p>\n<p>注意，当⽤户输⼊ 26 与移位计数的差值时，程序可以对消息进⾏解密:</p>\n<p>Enter message to be encrypted: Jr dkhdg, pdnh pb gdb.<br>\nEnter shift amount (1-25): 23<br>\nEncrypted message: Go ahead, make my day</p>\n<p>不是字⺟的那些字符不要改动。此外，加密时不要改变字⺟的⼤⼩写。</p>\n<p>输出范例：</p>\n<p>Enter message to be encrypted: Hello, world!<br>\nEnter shift amount (1-25): 3<br>\nEncrypted message: Khoor, zruog!</p>\n<p>Enter message to be encrypted: Khoor, zruog!<br>\nEnter shift amount (1-25): 23<br>\nEncrypted message: Hello, world!</p>\n<blockquote>\n<pre><code>#include &lt;stdio.h&gt;\nint main(void)\n{\n    int a = 0;\n    int x;\n    char ch;\n    char basic[100] = {0};\n    printf(\"Enter message to be encrypted: \\n\");\n    while ((ch = getchar()) != '\\n')\n    {\n        basic[a] = ch;\n        a++;\n    }\n    printf(\"Enter shift amount (1-25)\");\n    scanf(\"%d\", &amp;x);\n    printf(\"Encrypted message: \");\n    for (int i = 0; i &lt; (sizeof(basic) / sizeof(basic[0])); i++)\n    {\n        if ((64 &lt; basic[i]) &amp;&amp; (basic[i] &lt; 91))\n        {\n            basic[i] = basic[i] + x - 26;\n            if (basic[i] &lt;= 64)\n            {\n                basic[i] = basic[i] + 26;\n            }\n            printf(\"%c\", basic[i]);\n        }\n        else if ((96 &lt; basic[i]) &amp;&amp; (basic[i] &lt; 123))\n        {\n            basic[i] = basic[i] + x - 26;\n            if (basic[i] &lt;= 96)\n            {\n                basic[i] = basic[i] + 26;\n            }\n            printf(\"%c\", basic[i]);\n        }\n        else if (basic[i] == 48)\n            ;\n        else\n            printf(\"%c\", basic[i]);\n    }\n    return 0;\n}</code></pre>\n</blockquote>\n",
            "tags": [
                "icoding答案"
            ]
        }
    ]
}